<?php
namespace ApplicationTest\Controller;

use \Application\Controller\IndexController,
    Zend\Http\Request,
    Zend\Http\Response,
    Zend\Mvc\MvcEvent,
    Zend\Mvc\Router\RouteMatch
;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-10 at 23:14:37.
 */
class IndexControllerTest extends BaseActionControllerTest // \PHPUnit_Framework_TestCase // 
{
	
	/**
	 * controller setup
	 */
	public function setupController()
	{
		$this->setResponse( new Response() );
        $this->setRequest( new Request() );
		$this->setEvent( new MvcEvent() );
		
		$this->setController( new IndexController() );
		$this->getController()->setServiceLocator($this->getApplicationServiceLocator());
		$this->getController()->setEvent($this->getEvent());
		$this->setRouteMatch(new RouteMatch(array('controller' => 'index', 'action' => 'index')));
        
		$this->getEvent()->setRouteMatch($this->getRouteMatch());
		
	}

	/**
	 * is the action dispatchable per route setting ?
	 */
	public function testIndexActionCanBeDispatchedByRoute()
	{
		$this->dispatch('/');
		$this->assertResponseStatusCode(200);
	
		$this->assertModuleName('Application');
		$this->assertControllerName('Application\Controller\Index');
		$this->assertControllerClass('IndexController');
		$this->assertMatchedRouteName('home');
	}

	/**
	 * is the action accessable per request/response action name ?
	 */
	public function testIndexActionCanBeDispatchedByAction()
	{
		// Specify which action to run
		$this->routeMatch->setParam('action', 'index');
		$this->routeMatch->setParam('type', 'mvc');
		
		// Kick the controller into action
		$result = $this->controller->dispatch($this->request);
	
		// Check the HTTP response code
		$response = $this->controller->getResponse();
		$this->assertEquals(201, $response->getStatusCode());
	
		// Check for a ViewModel to be returned
		$this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
	
		// Test the parameters contained in the View model
		//$vars = $result->getVariables();
		//$this->assertTrue(isset($vars['var']));
	}
	
	public function test404()
	{
		$this->routeMatch->setParam('action', 'action-not-found');
		$this->routeMatch->setParam('type', 'mvc');
		$result = $this->controller->dispatch($this->request);
		$response = $this->controller->getResponse();
		$this->assertEquals(404, $response->getStatusCode());
	}
	
}
